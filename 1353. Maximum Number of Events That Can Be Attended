class Solution {
public:
    int maxEvents(vector<vector<int>>& events) {
        sort(events.begin(),events.end());
        vector<bool> v1(100001,0);
        priority_queue<int, vector<int>, greater<int>> q1;
        int ans = 0;
        int nowDay = 0;;
        for(int i=0;i<events.size();i++)
        {    
            if(events[i][0]==nowDay||q1.empty())
            {
                nowDay = events[i][0];
                q1.push(events[i][1]);
                while((i+1)<events.size()&&events[i+1][0] == nowDay)
                {
                    i++;
                    q1.push(events[i][1]);
                }
            }      
            else
                i--;
            while(!q1.empty()&&q1.top()<nowDay)
                q1.pop();
            if(!q1.empty())
            {
                q1.pop();
                ans++;
            }
            nowDay++;
        }
        while(!q1.empty())
        {
            while(!q1.empty()&&q1.top()<nowDay)
                q1.pop();
            if(!q1.empty())
            {
                q1.pop();
                ans++;
            }
            nowDay++;
        }
        return ans;
    }
};
