class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> output(0);
        if(nums.size()<4)
            return output;
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size()-3;i++)
        {
            for(int u=i+1;u<nums.size()-2;u++)
            {
                int nowTarget = target-nums[i]-nums[u];
                int start = u+1;
                int end = nums.size()-1;
                while(start<end)
                {
                    int thisSum = nums[start]+nums[end];
                    if(thisSum==nowTarget)
                    {
                        vector<int> tem(4);
                        tem[0] = nums[i];    
                        tem[1] = nums[u];    
                        tem[2] = nums[start];    
                        tem[3] = nums[end]; 
                        if(output.size()==0||tem!=output[output.size()-1])
                            output.emplace_back(tem);
                        end--;
                        start++;                                  
                    }
                    else
                    {
                        if(thisSum>nowTarget)
                        {
                            end--;
                            while(end>start+1&&nums[end]==nums[end+1])
                                end--;
                        }
                        else
                        {
                            start++;
                            while(end>start+1&&nums[start]==nums[start-1])
                                start++;
                        }
                    }
                }
                while(u!=nums.size()-2&&nums[u]==nums[u+1])
                    u++;
            }
            while(i!=nums.size()-3&&nums[i] == nums[i+1])
                i++;
        }
        return output;
    }
};
