class Solution {
public:
    string longestPalindrome(string s) {
        vector<vector<bool>> dp(s.size(),vector<bool>(s.size(),0));
        int max = 1;
        int a = 0;
        int b = 0;
        dp[0][0] = 1;
        for(int i=1;i<s.size();i++)
        {
            dp[i][i] = 1;
            if(s[i]==s[i-1])
            {
                dp[i][i-1] = 1;
                if(max<2)
                {
                    max=2;
                    a = i-1;
                    b = i;
                }
            }
        }
        for(int u=1;u<s.size();u++)
        {
            for(int i=0;i<u;i++)
            {
                if(u == i+1 && s[i]==s[u])
                    dp[i][u] = 1;
                else if(dp[i+1][u-1]&&s[i]==s[u])
                {
                    dp[i][u] = 1;
                    if(u-i+1>max)
                    {
                        max = u-i+1;
                        a = i;
                        b = u;
                    }                        
                }                    
            }
        }
        string output = "";
        for(int i=a;i<=b;i++)
            output += s[i];
        return output;
    }
};
