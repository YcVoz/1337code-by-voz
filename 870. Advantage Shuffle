class Solution {
public:
    vector<int> advantageCount(vector<int>& nums1, vector<int>& nums2) {
        sort(nums1.begin(),nums1.end());
        vector<int> orinums2 = nums2;
        sort(nums2.begin(),nums2.end());
        vector<bool> check(nums1.size(),0);
        vector<int> output(nums1.size(),-1);
        map<int,vector<int>> m1;
        int ptr1 = 0;
        int ptr2 = 0;
        while(ptr1<nums1.size())
        {
            if(nums1[ptr1]>nums2[ptr2])
            {
                m1[nums2[ptr2]].emplace_back(nums1[ptr1]);
                check[ptr1] = 1;
                ptr2++;
            }
            ptr1++;
        }
        ptr1 = 0;
        for(int i=0;i<nums1.size();i++)
        {
            if(m1[orinums2[i]].size()!=0)
            {
                output[i] = m1[orinums2[i]][m1[orinums2[i]].size()-1];
                m1[orinums2[i]].resize(m1[orinums2[i]].size()-1);
            }
            else
            {
                while(check[ptr1])
                    ptr1++;
                output[i] = nums1[ptr1];
                ptr1++;
            }
        }
        return output;
    }
};
