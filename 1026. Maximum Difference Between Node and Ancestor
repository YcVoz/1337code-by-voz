/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDiff = 0;
    int maxAncestorDiff(TreeNode* root) {
        passMaxMinWhileTraveling(root,root->val,root->val);
        return maxDiff;
    }
    void passMaxMinWhileTraveling(TreeNode* root, int maxx, int minn){
        if(root){
            maxDiff = max(maxDiff,abs(root->val-maxx));
            maxDiff = max(maxDiff,abs(root->val-minn));
            maxx = max(maxx,root->val);
            minn = min(minn,root->val);
            passMaxMinWhileTraveling(root->left, maxx, minn);
            passMaxMinWhileTraveling(root->right, maxx, minn);
        }
    }
};
