class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        queue<pair<int,int>>q1;
        int finished = 0;
        int m = mat.size();
        int n = mat[0].size();
        int mn = m*n;
        vector<vector<int>> ans(m,vector<int>(n,-1));
        for(int i=0;i<m;i++){
            for(int j = 0;j<n;j++){
                if(!mat[i][j]){
                    finished++;
                    ans[i][j] = 0;
                    q1.push({i,j});
                }
            }
        }
        while(!q1.empty()&&finished!=mn){
            int i = q1.front().first;
            int j = q1.front().second;
            q1.pop();
            if(i>0){
                if(ans[i-1][j]==-1){
                    ans[i-1][j] = ans[i][j]+1;
                    finished++;
                    q1.push({i-1,j});
                }
            }
            if(j>0){
                if(ans[i][j-1]==-1){
                    ans[i][j-1] = ans[i][j]+1;
                    finished++;
                    q1.push({i,j-1});
                }
            }
            if(i<m-1){
                if(ans[i+1][j]==-1){
                    ans[i+1][j] = ans[i][j]+1;
                    finished++;
                    q1.push({i+1,j});
                }
            }
            if(j<n-1){
                if(ans[i][j+1]==-1){
                    ans[i][j+1] = ans[i][j]+1;
                    finished++;
                    q1.push({i,j+1});
                }
            }
        }
        return ans;
    }
};
