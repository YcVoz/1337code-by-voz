/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if(root->left==NULL&&root->right==NULL)
            return 1;
        vector<queue<TreeNode*>> q(2);
        bool nowQ = 0;
        int maxSum = -2147483648;
        int nowSum = 0;
        int nowLevel = 0;
        int maxLevel = 0;
        q[nowQ].push(root);
        while(!q[nowQ].empty())
        {
            nowSum += q[nowQ].front()->val;
            if(q[nowQ].front()->left)
                q[!nowQ].push(q[nowQ].front()->left);
            if(q[nowQ].front()->right)
                q[!nowQ].push(q[nowQ].front()->right);
            q[nowQ].pop();
            if(q[nowQ].empty())
            {
                nowLevel++;
                if(nowSum>maxSum)
                {
                    maxSum = nowSum;
                    maxLevel = nowLevel;
                }
                nowQ = !nowQ;
                nowSum = 0;
            }
        }
        return maxLevel;
    }
};
