/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> v1;
    TreeNode* balanceBST(TreeNode* root) {
        travel(root);
        root = putIn(0,v1.size()-1);
        return root;
    }
    void travel(TreeNode* root) {
        if(root->left)
            travel(root->left);
        v1.emplace_back(root->val);
        if(root->right)
            travel(root->right);
    }
    TreeNode* putIn(int start, int end){
        if(start==end)
            return new TreeNode(v1[end]);
        if(start+1==end)
            return new TreeNode(v1[end],new TreeNode(v1[start]),NULL);     
        int mid = (start+end)/2;
        return new TreeNode(v1[mid],putIn(start,mid-1),putIn(mid+1,end));
    }
};
