class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int n = nums.size();
        int ret = nums[0];
        vector<int> maxPosi(n,-10);
        vector<int> minNega(n,1);
        if(nums[0]>0)
            maxPosi[0] = nums[0];
        else if(nums[0]<0)
            minNega[0] = nums[0];
        for(int i=1;i<n;i++){
            if(nums[i]>0){
                maxPosi[i] = (maxPosi[i-1]>0)?maxPosi[i-1]*nums[i]:nums[i];
                minNega[i] = (minNega[i-1]<0)?minNega[i-1]*nums[i]:1;
            }
            else if(nums[i]<0){
                maxPosi[i] = (minNega[i-1]<0)?minNega[i-1]*nums[i]:-1;
                minNega[i] = (maxPosi[i-1]>0)?maxPosi[i-1]*nums[i]:nums[i];
            }
            ret = max(ret,nums[i]);
        }
        for(int i=0;i<n;i++){
            ret = max(ret,maxPosi[i]);
        }
        return ret;
    }
};
