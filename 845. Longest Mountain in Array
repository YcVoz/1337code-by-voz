class Solution {
public:
    int longestMountain(vector<int>& arr) {
        if(arr.size()<3)
            return 0;
        int upstair = 0;
        int startIndex = -1;
        int longest = 0;
        for(int i=1;i<arr.size();i++)
        {
            if(upstair==0)
            {
                if(arr[i]>arr[i-1])
                {
                    upstair = 1;
                    startIndex = i-1;
                }
            }
            else if(upstair==1)
            {
                if(arr[i]==arr[i-1])
                    upstair = 0;
                else if(arr[i]<arr[i-1])
                    upstair = -1;
            }
            else
            {
                if(arr[i]>arr[i-1])
                {
                    longest = (i-startIndex>longest)?i-startIndex:longest;
                    upstair = 1;
                    startIndex = i-1;                    
                }
                else if(arr[i]==arr[i-1])
                {
                    longest = max(i-startIndex,longest);
                    upstair = 0;
                }
            }
            
        }
        if(upstair==-1)
            longest = (arr.size()-startIndex>longest)?arr.size()-startIndex:longest;
        return longest;
    }
};
