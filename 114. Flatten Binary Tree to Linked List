/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        if(root!=NULL){
            TreeNode* newhead = new TreeNode(root->val);
            TreeNode* newtem =  newhead;
            dfs(newhead,root->left);
            dfs(dfs(newhead,root->left),root->right);
            root->val = newtem->val;
            root->left = newtem->left;
            root->right = newtem->right;
            delete newhead;
        }
    }
    TreeNode* dfs(TreeNode* newhead,TreeNode* root) {
        if(root!=NULL){
            newhead->right = new TreeNode(root->val);
            newhead = newhead->right;
            return dfs(dfs(newhead,root->left),root->right);            
        }
        else
        {
            return newhead;
        }
    }
};
