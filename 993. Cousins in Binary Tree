class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        vector<int> forx = depth(root,x);
        vector<int> fory = depth(root,y);
        if(forx[0]!=fory[0])
        {
            return 0;
        }
        else if(forx[1]==fory[1])
        {
            return 0;
        }
        return 1;
    }
    vector<int> depth(TreeNode* root, int a)
    {
        vector<int> output;
        output.resize(2);
        output[0] = -1;
        output[1] = -1;
        if(root == NULL)
        {
            return output;;
        }
        else if(root->val == a)
        {
            output[0] = 0;
            output[1] = -1;
            return output;
        }
        else 
        {
            vector<int> lefttree = depth(root->left, a);
            if(lefttree[0]==0)
            {
                output[0] = lefttree[0]+1;
                output[1] = root->val;
                return output;
            }
            else if(lefttree[0]!=-1)
            {
                output[0] = lefttree[0]+1;
                output[1] = lefttree[1];
                return output;
            }
            vector<int> righttree = depth(root->right, a);
            if(righttree[0]==0)
            {
                output[0] = righttree[0]+1;
                output[1] = root->val;
                return output;
            }
            else if(righttree[0]!=-1)
            {
                output[0] = righttree[0]+1;
                output[1] = righttree[1];
                return output;
            }
        }
        return output;
    }
};
