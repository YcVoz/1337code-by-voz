class Solution {
public:
    int longestPalindromeSubseq(string s) {
        vector<vector<int>> dp(s.size()+1,vector<int>(s.size()+1,0));
        for(int i=0;i<s.size();i++)
            dp[i][i] = 1;
        for(int i=0;i<s.size()-1;i++)
            dp[i][i+1] = s[i]==s[i+1]?2:max(dp[i][i],dp[i+1][i+1]);
        for(int i = 3;i<=s.size();i++)
            for(int startIndex = 0;startIndex+i<=s.size();startIndex++)
                if(s[startIndex]==s[startIndex+i-1])
                    dp[startIndex][startIndex+i-1] = 2+dp[startIndex+1][startIndex+i-2];
                else
                    dp[startIndex][startIndex+i-1] = max(dp[startIndex+1][startIndex+i-1],dp[startIndex][startIndex+i-2]);
        return dp[0][s.size()-1];
    }
};
