class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> v1(n,0);
        for(int i=0;i<n;i++){
            if(v1[i]==0){
                queue<int> q1;
                q1.push(i);
                v1[i] = 1;
                while(!q1.empty()){
                    int nowNode = q1.front();
                    q1.pop();
                    for(int u=0;u<graph[nowNode].size();u++){
                        if(v1[graph[nowNode][u]]==0){
                            v1[graph[nowNode][u]] = v1[nowNode]*(-1);
                            q1.push(graph[nowNode][u]);
                        }
                        else{
                            if(v1[graph[nowNode][u]] != v1[nowNode]*(-1))
                                return 0;
                        }
                    }
                }
            }
        }
        return 1;
    }
};
