class Solution {
public:
    bool validateStackSequences(vector<int>& pushed, vector<int>& popped) {
        int index1 = 0;
        int index2 = 0;
        vector<bool> inStack(1000,0);
        vector<bool> dropAway(1000,0);
        stack<int> s1;
        while(index2<popped.size()){
            if(dropAway[popped[index2]])
                return 0;
            if(inStack[popped[index2]]){
                if(s1.top()!=popped[index2])
                    return 0;
                else{
                    s1.pop();
                    inStack[popped[index2]] = 0;
                    dropAway[popped[index2]] = 1;
                    index2++;
                }
            }
            else{
                while(pushed[index1]!=popped[index2]){
                    s1.push(pushed[index1]);
                    inStack[pushed[index1]] = 1;
                    index1++;
                }
                s1.push(pushed[index1]);
                inStack[pushed[index1]] = 1;
                index1++;
            }
        }
        return 1;
    }
};
