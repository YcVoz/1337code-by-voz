class Solution {
public:
    int minSubArrayLen(int s, vector<int>& nums) {
        if(!nums.size())
            return 0;
        vector<vector<int>> dp(2,vector<int>(nums.size(),-1));
        int output = nums.size();
        if(nums[0]>=s)
            return 1; 
        int index = 0;        
        int a = nums[0];
        while(a<s && index+1<nums.size())
        {
            index++;
            a += nums[index];
        }
        if(a<s)
            return 0;
        else        
        {
            int inddex = 0;
            while(a>=s)
            {
                a -= nums[inddex];
                inddex++;
            }       
            inddex--;
            a += nums[inddex];
            dp[1][index] = a;
            dp[0][index] = inddex;
            output = index - inddex + 1;
        }        
        for(int i = index+1;i<nums.size();i++)
        {
            int inddex = dp[0][i-1];
            int all = dp[1][i-1] + nums[i];
            while(all>=s)
            {
                all -= nums[inddex];
                inddex++;
            }       
            inddex--;
            all += nums[inddex];
            dp[1][i] = all;
            dp[0][i] = inddex;
            if(i - inddex + 1 <output)
                output = i - inddex + 1;
        }
        return output;
    }
};
