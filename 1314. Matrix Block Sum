class Solution {
public:
    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int k) {
        int m = mat.size();
        int n = mat[0].size();
        vector<vector<int>> colSum(n,vector<int>(m,0));
        vector<int> leftline(m,0);
        vector<vector<int>> ans(m,vector<int>(n,0));
        for(int i=0;i<n;i++)
            for(int u = 0;u<k+1;u++)
                colSum[i][0]+=mat[u][i];
        for(int u = 0;u<n;u++)
            for(int i = 1;i<m;i++)
                colSum[u][i] = colSum[u][i-1] + ((i+k<m)?mat[i+k][u]:0) - ((i-k-1>=0)?mat[i-k-1][u]:0);
        for(int i=0;i<k+1;i++)
            for(int u=0;u<k+1;u++)
                ans[0][0] += (i<m&&u<n)?mat[i][u]:0;
        for(int i=0;i<m;i++)
            for(int u=0;u<k+1;u++)
                leftline[i] += (i<m&&u<n)?mat[i][u]:0;
        for(int i = 1;i<m;i++)
            ans[i][0] = ans[i-1][0] + ((i+k<m)?leftline[i+k]:0) - ((i-k-1>=0)?leftline[i-k-1]:0);
        for(int u = 1;u<n;u++)
            for(int i=0;i<m;i++)
                ans[i][u] = ans[i][u-1] + ((u+k<n)?colSum[u+k][i]:0) - ((u-k-1>=0)?colSum[u-k-1][i]:0);
        return ans;
    }
};
