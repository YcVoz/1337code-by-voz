class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        vector<pair<int,int>> change(0);
        for(int i=0;i<board.size();i++)
        {
            for(int u=0;u<board[0].size();u++)
            {
                if(board[i][u])
                {
                    int counttt = countNeighbor(board,i,u);
                    if((counttt<2)||(counttt>3))
                        change.emplace_back(pair<int,int>(i,u));
                }
                else
                {
                    if(countNeighbor(board,i,u)==3)
                        change.emplace_back(pair<int,int>(i,u));
                }
            }
        }
        for(int i=0;i<change.size();i++)
        {
            board[change[i].first][change[i].second] = !board[change[i].first][change[i].second];
        }
    }
    int countNeighbor(vector<vector<int>> board,int a,int b)
    {
        int m = board.size();
        int n = board[0].size();
        int output = 0;
        if(a>0&&b>0)
            output += board[a-1][b-1];
        if(a>0)
            output += board[a-1][b];
        if(a>0&&b<n-1)
            output += board[a-1][b+1];
        if(b>0)
            output += board[a][b-1];
        if(b<n-1)
            output += board[a][b+1];
        if(a<m-1&&b>0)
            output += board[a+1][b-1];
        if(a<m-1)
            output += board[a+1][b];
        if(a<m-1&&b<n-1)
            output += board[a+1][b+1];
        return output;
    }
};
