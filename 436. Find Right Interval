class Solution {
public:
    vector<int> findRightInterval(vector<vector<int>>& intervals) {
        if(intervals.size()==1)
            return vector<int> (1,-1);
        vector<vector<int>> newV1(intervals.size(),vector<int>(2,0));
        vector<int> output(intervals.size(),-1);
        for(int i=0;i<intervals.size();i++)
        {
            newV1[i][0] = intervals[i][0];
            newV1[i][1] = i;
        }
        sort(newV1.begin(),newV1.end());
        for(int i=0;i<intervals.size();i++)
        {
            if(intervals[i][1]<=newV1[intervals.size()-1][0])
            {
                if(intervals[i][1]<=newV1[0][0])
                    output[i] = newV1[0][1];
                else
                {
                    int left = 0;
                    int right = intervals.size()-1;
                    while(left+1!=right)
                    {
                        int mid = (left+right)/2;
                        if(intervals[i][1]<=newV1[mid][0])
                            right = mid;
                        else
                            left = mid;
                    }
                    output[i] = newV1[right][1];
                }
            }                
        }
        return output;
    }
};
