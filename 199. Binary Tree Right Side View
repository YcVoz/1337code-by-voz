/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        if(root==NULL)
            return vector<int> (0);
        vector<queue<TreeNode*>> q1(2);
        q1[0].push(root);
        bool tag = 0;
        vector<int> output(0);
        while(!q1[tag].empty())
        {
            int tem = q1[tag].size();
            output.emplace_back(q1[tag].back()->val);
            for(int i=0;i<tem;i++)
            {
                if(q1[tag].front()->left!=NULL)
                    q1[!tag].push(q1[tag].front()->left);
                if(q1[tag].front()->right!=NULL)
                    q1[!tag].push(q1[tag].front()->right);
                q1[tag].pop();
            }
            tag = !tag;
        }
        return output;
    }
};
