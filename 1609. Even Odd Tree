/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        vector<queue<TreeNode*>> q1(2);
        q1[0].push(root);
        bool tag = 0;
        while(!q1[tag].empty())
        {
            int tem = q1[tag].size();
            int a = 1000001;
            if(!tag)
                a = 0;
            for(int i = 0;i<tem;i++)
            {
                if(q1[tag].front()->left!=NULL)
                    q1[!tag].push(q1[tag].front()->left);
                if(q1[tag].front()->right!=NULL)
                    q1[!tag].push(q1[tag].front()->right);
                if(tag&&q1[tag].front()->val<a&&!(q1[tag].front()->val%2))
                    a = q1[tag].front()->val;
                else if(!tag&&q1[tag].front()->val>a&&(q1[tag].front()->val%2))
                    a = q1[tag].front()->val;
                else
                    return 0;
                q1[tag].pop();
            }                  
            tag = !tag;
        }
        return 1;
    }
};
