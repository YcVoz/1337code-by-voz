/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    //val: 0 = dark ; 1 = light but no camera ; 520 = camera ;  
    int output = 0;
    int minCameraCover(TreeNode* root) {
        go(root);
        if(root->val== 0)
            output++;
        return output;
    }
    void go(TreeNode* root){
        if(root->left==NULL&&root->right==NULL)
        {
            ;
        }
        else if(root->left==NULL)
        {
            go(root->right);
            if(root->right->val==520)
            {
                root->val = 1;
            }
            else if(root->right->val==0)
            {
                root->val = 520;
                output++;
            }
        }
        else if(root->right==NULL)
        {
            go(root->left);
            if(root->left->val==520)
            {
                root->val = 1;
            }
            else if(root->left->val==0)
            {
                root->val = 520;
                output++;
            }
        }
        else
        {
            go(root->left);
            go(root->right);
            if((root->left->val==0)||(root->right->val==0))
            {
                root->val = 520;
                output++;
            }
            else if((root->left->val==1)&&(root->right->val==1))
            {
                ;
            }
            else
            {
                root->val = 1;
            }
        }
    }
};
