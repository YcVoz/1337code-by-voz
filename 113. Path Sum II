/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> ans;
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<int> now;
        travel(root, targetSum, now, 0);
        return ans;
    }
    void travel(TreeNode* root, int targetSum, vector<int> now, int sum){
        if(!root)
            return;
        now.emplace_back(root->val);
        if(root->left==NULL && root->right==NULL){
            if(sum+root->val == targetSum)
                ans.emplace_back(now);
            return;
        }
        travel(root->left, targetSum, now, sum+root->val);
        travel(root->right, targetSum, now, sum+root->val);
        return;
    }
};
