class LRUCache {
public:
    int maxcapcity;
    queue<int> q1;
    int nowelemect = 0;
    map<int,int> mapToValue;
    map<int,int> mapToTimes;
    LRUCache(int capacity) {
        maxcapcity = capacity;
    }
    
    int get(int key) {
        if(mapToValue[key]==0)
            return -1;
        mapToTimes[key]++;
        q1.push(key); 
        return mapToValue[key];
    }
    
    void put(int key, int value) {
        if(mapToTimes[key]==0)
        {
            if(nowelemect == maxcapcity)
            {
                while(mapToTimes[q1.front()]!=1)
                {
                    mapToTimes[q1.front()]--;
                    q1.pop();
                }
                mapToValue[q1.front()] = 0;
                mapToTimes[q1.front()]--;          
                q1.pop();
            }
            else
            {
                nowelemect++;
            }
        }          
        mapToTimes[key]++;
        mapToValue[key] = value;
        q1.push(key);            
    }
};

/**
 * Your LRUCache object will be instantiated and called as such:
 * LRUCache* obj = new LRUCache(capacity);
 * int param_1 = obj->get(key);
 * obj->put(key,value);
 */
