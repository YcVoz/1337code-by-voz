class Solution {
public:
    int findTheLongestSubstring(string s) {
        int ret = 0;
        int tem;
        vector<vector<int>> dp(2,vector<int>(32,0));
        for(int i=0;i<s.size();i++){
            switch(s[i]){
                case 'a':s[i]='a';break;
                case 'e':s[i]='b';break;
                case 'i':s[i]='c';break;
                case 'o':s[i]='d';break;
                case 'u':s[i]='e';break;
                default:s[i]='z';break;
            }            
        }
        for(int i=0;i<s.size();i++){
            tem = s[i]-'a';
            if(tem<5){
                for(int o=0;o<32;o++){                    
                    dp[i&1][o] = dp[!(i&1)][o^(1<<tem)]?dp[!(i&1)][o^(1<<tem)]+1:0;
                }
                dp[i&1][(1<<tem)] = max(dp[i&1][(1<<tem)],1);
            }
            else{
                dp[i&1][0] = dp[!(i&1)][0]+1;
                for(int o=1;o<32;o++){
                    dp[i&1][o] = dp[!(i&1)][o]>0?dp[!(i&1)][o]+1:0;
                }
            }
            ret = max(ret,dp[i&1][0]);
        }
        return ret;
    }
};
