class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        stack<pair<int,int>>s1;
        int n = arr.size();
        vector<long long> left(n,-1);
        vector<long long> right(n,-1);
        long long ans = 0;
        for(int i=0;i<n;i++){
            while(!s1.empty()&&s1.top().first>=arr[i])s1.pop();
            left[i] = s1.empty()?0:s1.top().second+1;
            s1.push(make_pair(arr[i],i));
        }
        s1 = stack<pair<int,int>>();
        for(int i=n-1;i>=0;i--){
            while(!s1.empty()&&s1.top().first>arr[i])s1.pop();
            right[i] = s1.empty()?n-1:s1.top().second-1;
            s1.push(make_pair(arr[i],i));
        }
        for(int i=0;i<n;i++){
            pair<int,int> tam = make_pair(left[i],right[i]);
            ans += (i-left[i]+1)%1000000007*arr[i]%1000000007*(right[i]-i+1)%1000000007;
            ans %= 1000000007;
        }            
        return ans;
    }
};
