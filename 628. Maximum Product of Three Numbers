class Solution {
public:
    int maximumProduct(vector<int>& nums) {
        int pos1=-1001;
        int pos2=-1001;
        int pos3=-1001;
        int neg1=1001;
        int neg2=1001;
        int bigneg1 = -1001;
        int bigneg2 = -1001;
        int bigneg3 = -1001;
        int p_count=0;
        int n_count=0;
        int zero_count=0;
        if(nums.size()>=5)
        {
            for(int i=0;i<nums.size();i++)
            {
                if(nums[i]>0){
                    p_count++;
                    if(nums[i]>pos1)
                    {
                        pos3=pos2;
                        pos2=pos1;
                        pos1=nums[i];               
                    }
                    else if(nums[i]>pos2)
                    {
                        pos3=pos2;
                        pos2=nums[i];
                    }
                    else if(nums[i]>pos3)
                    {
                        pos3=nums[i];
                    }
                }
                else if(nums[i]<0)
                {
                    n_count++;
                    if(nums[i]>bigneg1)
                    {
                        bigneg3=bigneg2;
                        bigneg2=bigneg1;
                        bigneg1=nums[i];               
                    }
                    else if(nums[i]>bigneg2)
                    {
                        bigneg3=bigneg2;
                        bigneg2=nums[i];
                    }
                    else if(nums[i]>bigneg3)
                    {
                        bigneg3=nums[i];
                    }
                    if(nums[i]<neg1)
                    {
                        neg2=neg1;
                        neg1=nums[i];
                    }
                    else if(nums[i]<neg2)
                    {
                        neg2=nums[i];
                    }
                }
                else{zero_count++;}
            }
            int a = pos1*pos2*pos3;
            int b = neg1*neg2*pos1;
            if(p_count>=3&&n_count>=2)
            {
                if(a>b)
                {
                    return a;
                }
                else
                {
                    return b;
                }
            }
            else if(p_count<3&&n_count>=2)
            {
                if(p_count==0)
                {
                    if(zero_count!=0)
                    {return 0;}
                    else
                    {return bigneg1*bigneg2*bigneg3;}
                }
                else if(p_count==1)
                {return b;}
                else
                {return b;}
            }
            else if(p_count>=3&&n_count<2)
            {
                return a;
            }
            else
            {
                return 0;
            }

        }
        else if(nums.size() == 4)
        {
            int a=-999999999;
            for(int i=0;i<4;i++)
            {
                int tem = nums[i%4]*nums[(i+1)%4]*nums[(i+2)%4];
                if(tem>a)
                    a=tem;
            }
            return a;
        }
        else
        {
            return nums[0]*nums[1]*nums[2];
        }

    }
};
