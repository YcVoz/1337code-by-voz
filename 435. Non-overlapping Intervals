class Solution {
public:
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end());
        // for(int i=0;i<intervals.size();i++)
        //     cout<<intervals[i][0]<<" "<<intervals[i][1]<<endl;
        int nowTest = 0;
        vector<bool> check(intervals.size(),1);
        int ans = 0;
        int count = 0;
        int minValue = 2147483647;
        int minIndex = -1;
        for(int i=1;i<intervals.size()+1;i++)
        {
            if(i>=intervals.size())
            {
                if(count>0)
                {
                    int temmm = -1;
                    for(int u = nowTest;u<intervals.size();u++)
                    {
                        if(intervals[u][0]<intervals[minIndex][1])
                        {
                            if(u!=minIndex)
                            {
                                ans++;
                                check[u] = 0;
                            }
                        }                                
                        else
                        {
                            temmm = u;
                            u = intervals.size();
                        }
                    }
                    nowTest = temmm==-1?i:temmm;
                    i = nowTest;
                    if(nowTest>=intervals.size()||i>=intervals.size())
                        return ans;
                    count = 0;
                    minValue = intervals[nowTest][1];
                    minIndex = nowTest;
                }
                else
                    return ans;
            }
            else if(check[i])
            {
                if(intervals[i][0]<intervals[nowTest][1])
                {
                    count ++;
                    if(intervals[i][1]<minValue)
                    {
                        minValue = intervals[i][1];
                        minIndex = i;
                    }
                }
                else
                {
                    int temmm = -1;
                    if(count>0)
                    {
                        for(int u = nowTest;u<i;u++)
                        {
                            if(intervals[u][0]<intervals[minIndex][1])
                            {
                                if(u!=minIndex)
                                {
                                    ans++;
                                    check[u] = 0;
                                }
                            }                                
                            else
                            {
                                temmm = u;
                                u = i;
                            }
                        }
                        
                    }
                    nowTest = temmm==-1?i:temmm;
                    i = nowTest;
                    count = 0;
                    minValue = intervals[nowTest][1];
                    minIndex = nowTest;            
                }
            }
                
        }
        return ans;
    }
    bool forSort(vector<int>a,vector<int>b)
    {
        if(a[0]<b[0])
            return 1;
        return 0;
    }
};
