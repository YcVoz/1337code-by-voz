/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<queue<TreeNode*>> queue_v;
        queue_v.resize(2);
        queue_v[0].push(root);
        int nowcount = 0;
        vector<double> output;
        bool cont = 1;
        output.resize(0);
        while(cont)
        {
            double sum = 0.0;
            int nums = queue_v[nowcount].size();
            while(queue_v[nowcount].size()!=0)
            {
                sum+=queue_v[nowcount].front()->val;   
                if(queue_v[nowcount].front()->left!=NULL)
                {
                    queue_v[!nowcount].push(queue_v[nowcount].front()->left);
                }
                if(queue_v[nowcount].front()->right!=NULL)
                {
                    queue_v[!nowcount].push(queue_v[nowcount].front()->right);
                }
                queue_v[nowcount].pop();
            }            
            output.push_back(sum/nums);
            if(queue_v[!nowcount].size()==0)
            {
                cont = 0;
            }
            else
            {
                nowcount = !nowcount;
            }
        }
        return output;
    }
};
