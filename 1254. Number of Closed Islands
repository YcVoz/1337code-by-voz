class Solution {
public:
    int closedIsland(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        int ret = 0;
        vector<int> dir = {0,1,0,-1,0};
        for(int i=1;i<m-1;i++){
            for(int u=1;u<n-1;u++){
                if(grid[i][u]==0){
                    bool check = 1;
                    queue<pair<int,int>> q1;
                    q1.push({i,u});
                    grid[i][u] = 1;
                    while(!q1.empty()){
                        int x = q1.front().first;
                        int y = q1.front().second;
                        q1.pop();
                        for(int d = 0;d<4;d++){
                            int xx = x+dir[d];
                            int yy = y+dir[d+1];
                            if(xx>=0 && yy>=0 && xx<m & yy<n){
                                if(grid[xx][yy]==0){
                                    q1.push({xx,yy});
                                    grid[xx][yy] = 1;
                                }
                            }
                            else
                                check = 0;
                        }
                    }
                    ret += check;
                }
            }
        }
        return ret;
    }
};
