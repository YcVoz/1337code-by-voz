/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        ListNode* headhead = new ListNode(373, list1);
        ListNode* headheadAns = headhead;
        ListNode* list2Tail = list2;
        ListNode* list1Head;
        ListNode* list1Tail;
        while(list2Tail->next)
            list2Tail = list2Tail->next;
        int nowCount = -1;
        while(nowCount!=b){
            if(nowCount+1==a)
                list1Head = headhead;
            nowCount++;
            headhead = headhead->next;
            if(nowCount==b)
                list1Tail = headhead->next;
        }
        list1Head->next = list2;
        list2Tail->next = list1Tail;
        return headheadAns->next;
    }
};
