/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCompleteTree(TreeNode* root) {
        bool flag = 0;
        queue<TreeNode*> q1;
        queue<TreeNode*> q2;
        q1.push(root);
        while(!q1.empty()){
            TreeNode* tem = q1.front();
            q1.pop();
            if(tem->left){
                if(flag)
                    return 0;
                q2.push(tem->left);
            }
            else
                flag = 1;
            if(tem->right){
                if(flag)
                    return 0;
                q2.push(tem->right);
            }
            else
                flag = 1;
            if(q1.empty()){
                q1 = q2;
                q2 = queue<TreeNode*>();
            }
        }
        return 1;
    }
};
