class Solution {
public:
    int countSquares(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        int ans = 0;
        vector<vector<int>> v1(m,vector<int>(n,0));
        v1[0][0] = matrix[0][0];
        for(int i=1;i<m;i++)
            v1[i][0] = v1[i-1][0] + matrix[i][0];
        for(int i=1;i<n;i++)
            v1[0][i] = v1[0][i-1] + matrix[0][i];
        for(int i=1;i<m;i++)
            for(int u=1;u<n;u++)
                v1[i][u] = v1[i-1][u] + v1[i][u-1] - v1[i-1][u-1] + matrix[i][u];        
        for(int i=0;i<m;i++){
            for(int u=0;u<n;u++){
                bool tag = matrix[i][u];
                for(int l = 1;tag&&l<=i+1&&l<=u+1;l++){
                    int square = v1[i][u];
                    square -= (i-l>=0)?v1[i-l][u]:0;
                    square -= (u-l>=0)?v1[i][u-l]:0;
                    square += ((i-l>=0)&&(u-l>=0))?v1[i-l][u-l]:0;
                    if(square==pow(l,2))
                        ans++;
                    else
                        tag = 0;
                }
            }
        }
        return ans;
    }
};
