class Solution {
public:
    int nowIndex;
    int n;
    vector<vector<int>> v1;
    vector<vector<int>> permute(vector<int>& nums) {
        n = nums.size();
        int size = 1;
        nowIndex = 0;
        for(int i=n;i>=2;i--)
            size *= i;
        v1.resize(size); 
        perm(nums,0);
        return v1;
    }
    void perm(vector<int>& nums, int startIndex){
        if(startIndex>=n)return;
        else if(startIndex==n-1){
            v1[nowIndex] = nums;
            nowIndex ++;
        }     
        perm(nums,startIndex+1);
        for(int i = startIndex+1;i<n;i++){
            swap(nums, startIndex,i);
            perm(nums,startIndex+1);
            swap(nums, startIndex,i);
        }
    }
    void swap(vector<int>& nums, int a,int b){
        nums[a] = nums[a]^nums[b];
        nums[b] = nums[a]^nums[b];
        nums[a] = nums[a]^nums[b];
    }
};
