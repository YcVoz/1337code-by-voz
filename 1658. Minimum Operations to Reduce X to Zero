class Solution {
public:
    int minOperations(vector<int>& nums, int x) {
        int n = nums.size();
        int now = 0;
        int nowIndexLeft = -2;
        int nowIndexRight = n;
        int minOperation = n+1;
        for(int i = 0;i<n;i++){
            now += nums[i];
            if(now > x){
                nowIndexLeft = i-1;
                now -= nums[i];
                break;
            }
        }
        if(nowIndexLeft==-2){            
            if(now==x)
                return n;
            return -1;
        }
        while(1){
            if(now==x){
                minOperation = min(minOperation,nowIndexLeft+1+n-nowIndexRight);
                if(nowIndexLeft==-1)
                    return minOperation>n?-1:minOperation;
                now -= nums[nowIndexLeft];
                nowIndexLeft--;
            }
            else if(now<x){
                nowIndexRight--;
                now += nums[nowIndexRight];
            }
            else{          
                if(nowIndexLeft==-1)
                    return minOperation>n?-1:minOperation;      
                now -= nums[nowIndexLeft];
                nowIndexLeft--;
            }
        }
        return -1;
    }
};
