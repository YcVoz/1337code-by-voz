/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> ans;
        if(root == NULL)
            return ans;
        queue<Node*> q1;
        queue<Node*> q2;
        vector<int> subAns;
        q1.push(root);
        while(!q1.empty()){
            Node* tem = q1.front();
            q1.pop();
            subAns.emplace_back(tem->val);
            for(int i=0;i<tem->children.size();i++){
                q2.push(tem->children[i]);                
            }
            if(q1.empty()){
                q1 = q2;
                q2 = queue<Node*>();
                ans.emplace_back(subAns);
                subAns.clear();
            }
        }
        return ans;
    }
};
