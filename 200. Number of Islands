class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        int ans = 0;        
        for(int i=0;i<m;i++){
            for(int u=0;u<n;u++){
                if(grid[i][u]=='1'){
                    ans++;
                    queue<pair<int,int>>q1;
                    grid[i][u] = 0;
                    q1.push(make_pair(i,u));
                    while(!q1.empty()){
                        pair<int,int> p1 = q1.front();
                        q1.pop();
                        int a = p1.first;
                        int b = p1.second;
                        if(a>0&&grid[a-1][b]=='1'){q1.push(make_pair(a-1,b));grid[a-1][b] = 0;}
                        if(b>0&&grid[a][b-1]=='1'){q1.push(make_pair(a,b-1));grid[a][b-1] = 0;}
                        if(a<m-1&&grid[a+1][b]=='1'){q1.push(make_pair(a+1,b));grid[a+1][b] = 0;}
                        if(b<n-1&&grid[a][b+1]=='1'){q1.push(make_pair(a,b+1));grid[a][b+1] = 0;}
                    }
                    
                }
            }
        }
        return ans;
    }
};
