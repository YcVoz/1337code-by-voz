class Solution {
public:
    int maximumSwap(int num) {
        vector<int> digit;
        vector<int> digit_ori;
        while(num!=0)
        {
            digit.emplace_back(num%10);
            num/=10;
        }
        digit_ori = digit;
        sort(digit.begin(),digit.end());
        for(int i = digit.size()-1;i>=0;i--)
        {
            if(digit_ori[i]!=digit[i])
            {
                for(int u=0;u<i;u++)
                {
                    if(digit[i]==digit_ori[u])
                    {
                        digit_ori[u]^=digit_ori[i];
                        digit_ori[i]^=digit_ori[u];
                        digit_ori[u]^=digit_ori[i];
                        u = 9;
                        i = -1;
                    }
                }
            }
        }
        for(int i = digit.size()-1;i>=0;i--)
        {
            num *= 10;
            num += digit_ori[i];
        }
        return num;
    }
};
