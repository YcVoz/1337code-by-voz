class Solution {
public:
    string smallestStringWithSwaps(string s, vector<vector<int>>& pairs) {
        if(pairs.size()==0)
        {
            return s;
        }
        vector<int> group;
        map<int,vector<int>> grouplabel;
        group.resize(s.size());
        for(int i=0;i<group.size();i++)
        {
            group[i] = i;
        }
        for(int i=0;i<group.size();i++)
        {
            vector<int> tem(1);
            tem[0] = i;
            grouplabel[i] = tem;            
        }
        for(int i=0;i<pairs.size();i++)
        {
            if(group[pairs[i][1]]>group[pairs[i][0]]) 
            {
                //group[pairs[i][1]] = group[pairs[i][0]];
                for(int u = 0;u<grouplabel[group[pairs[i][1]]].size();u++)
                {
                    if(grouplabel[group[pairs[i][1]]][u]!=pairs[i][1]){
                        grouplabel[group[pairs[i][0]]].emplace_back(grouplabel[group[pairs[i][1]]][u]);
                        group[grouplabel[group[pairs[i][1]]][u]] = group[pairs[i][0]];
                    }
                }
                auto iter = grouplabel.find(group[pairs[i][1]]);
                grouplabel.erase(iter);
                group[pairs[i][1]] = group[pairs[i][0]];
                grouplabel[group[pairs[i][0]]].emplace_back(pairs[i][1]);
                
            }
            else if(group[pairs[i][1]]<group[pairs[i][0]])
            {
               // group[pairs[i][0]] = group[pairs[i][1]];
                for(int u = 0;u<grouplabel[group[pairs[i][0]]].size();u++)
                {
                    if(grouplabel[group[pairs[i][0]]][u]!=pairs[i][0]){
                        grouplabel[group[pairs[i][1]]].emplace_back(grouplabel[group[pairs[i][0]]][u]);
                        group[grouplabel[group[pairs[i][0]]][u]] = group[pairs[i][1]];
                    }
                }
                auto iter = grouplabel.find(group[pairs[i][0]]);
                grouplabel.erase(iter);
                group[pairs[i][0]] = group[pairs[i][1]];
                grouplabel[group[pairs[i][1]]].emplace_back(pairs[i][0]);
                
            }
        }
        for(auto iter = grouplabel.begin();iter!=grouplabel.end();iter++)
        {
            string chars = "";
            for(int i=0;i<iter->second.size();i++)
            {
                chars+=s[iter->second[i]];
            }
            sort(chars.begin(),chars.end());
            sort(iter->second.begin(),iter->second.end());
            for(int i=0;i<iter->second.size();i++)
            {
                s[iter->second[i]] = chars[i];
            }
        }
        return s;
    }
};
